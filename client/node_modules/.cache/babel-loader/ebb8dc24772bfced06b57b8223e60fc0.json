{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\yinxi\\\\crwn-clothing\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDrxc7k-lU9dPZUU1fqGX7gYHOC8DJ6QGE\",\n  authDomain: \"crwn-db-8c81f.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-8c81f.firebaseio.com\",\n  projectId: \"crwn-db-8c81f\",\n  storageBucket: \"crwn-db-8c81f.appspot.com\",\n  messagingSenderId: \"409100497101\",\n  appId: \"1:409100497101:web:759775a66e162946f83984\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/yinxi/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDrxc7k-lU9dPZUU1fqGX7gYHOC8DJ6QGE\",\r\n    authDomain: \"crwn-db-8c81f.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-8c81f.firebaseio.com\",\r\n    projectId: \"crwn-db-8c81f\",\r\n    storageBucket: \"crwn-db-8c81f.appspot.com\",\r\n    messagingSenderId: \"409100497101\",\r\n    appId: \"1:409100497101:web:759775a66e162946f83984\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async(userAuth,additionalData)=>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n      const {displayName,email} = userAuth;\r\n      const createAt = new Date();\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createAt,\r\n          ...additionalData\r\n        })\r\n      }catch(error){\r\n        console.log('error creating user',error.message);\r\n      }\r\n    }\r\n    return userRef;\r\n  };\r\n\r\n  export const convertCollectionsSnapshotToMap = (collections) =>{\r\n    const transformedCollection = collections.docs.map(doc => {\r\n      const {title, items} = doc.data();\r\n      return {\r\n        routeName: encodeURI(title.toLowerCase()),\r\n        id:doc.id,\r\n        title,\r\n        items\r\n      }\r\n    });\r\n    return transformedCollection.reduce((accumulator,collection) => {\r\n      accumulator[collection.title.toLowerCase()] = collection;\r\n      return accumulator;\r\n    },{});\r\n  };\r\n\r\n  export const addCollectionAndDocuments = async (collectionKey,objectsToAdd) =>{\r\n    const collectionRef = firestore.collection(collectionKey);\r\n\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc();\r\n      batch.set(newDocRef,obj);\r\n    });\r\n\r\n    return await batch.commit(); \r\n  };\r\n\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt:'select_account'});\r\n  export const signInWithGoogle = ()=>auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}